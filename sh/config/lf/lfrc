#!/bin/bash
## lf config
. 
map . set hidden! 
map <esc> quit
map i set icons!
map F setfilter
map <c-f> filter
map <c-r> reload
map <c-q> quit
map <c-c> quit
map <enter> :shell 
map <?> maps
map <pgdn> half-down
map <s-down> half-down
map <pgup> half-up
map <s-up> half-up
map M set mouse!
map <c-a> invert glob-select *
map a invert glob-select *
map <lt> :cd /ants
map n toch 
map <tab> :push :<tab> 
map m :push %mkdir<space>
map <delete> delete
map d trash
map zu unzip
map zz zip
map c copy
map ss :search 
map S :search 
map <c-s> :search-next
map 1
cmap w
map ww :search 
map 11 mark-save
map 12 :mark-load
map 122 :mark-remove 
map v paste
map k cut
map A :cd /ants
map p :chmod_p
map <c-p> reload
map 1 !true
map x $$f
map X !$f
map o open
map O $mimeopen --ask $f
map h :cd ~
map sh :cmds
map H :maps 
map m :push %mkdir<space>
map D :depl
map t tag-toggle
map ll :lala
cmd lala $read -rep "$fx " "kk"; sleep 1;
set mouse
set icons
set shell /usr/bin/bash
set info size:time
set sortby time
set reverse 
#set drawbox
# set '-eu' options for shell commands These options are used to have safer shell commands. Option '-e' is used to exit on error and option '-u' is used to give error for unset variables. Option '-f' disables pathname expansion which can be useful when $f, $fs, and $fx variables contain names with '*' or '?' characters. However, this option is used selectively within individual commands as it can be limiting at times.
set shellopts '-eu'
set ifs "\n"
set scrolloff 20
set cursorpreviewfmt "\033[7;2m"
## cmds
cmd open &{{
case $(file --mime-type -Lb $f) in
text/*) lf -remote "send $id \$$EDITOR \$fx";;
*) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
esac
}}
cmd depl ${{
bash -c 'read -n1 -rp "this you? ${PWD##*/} " "gg"; [ "$gg" ]||npx wrangler pages deploy ./ --project-name ${PWD##*/} --commit-dirty=true; echo gg; '
}}
cmd toch ${{
read -rp "newfile: " "nf"; touch "$nf"; 
}}



cmd trash ${{
set -f
printf "\n--------\n\n\n\n$fx\n--------\n\n"
printf "delete? [t]rash [p]ermanent [a]bort "
read -n1 -rp " " "ans";
if [ "$ans" = "t" ]; then
mkdir -p ~/.trash 2>/dev/null;
mv $fx ~/.trash/;
elif [ "$ans" = "d" ]; then
rm -rf $fx;
fi; 
}}
cmd delete ${{
set -f
printf "\n\n\n\n$fx\n"
printf "delete? [Y/n]"
read -n1 -rp " " "ans"; 
if [ "$ans" != "n" ]; then 
rm -rf $fx; else echo ok; fi; 
}}

# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> trash
# map <delete> delete

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd unzip ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# cmd zip ${{
# set -f
# mkdir $f
# cp -r $fx $f
# zip -r $f.zip $f
# # rm -rf $1
# }}
# # 
#  cmd zip ${{
#  set -f
# zip -r $f.zip $fx
#  }} 


 
cmd zip ${{
printf "\n\n\n\nfiles: 
--
$fx
--
";
set -f; 
read -rp " ~ zip-name: " "ee";
zip -r $ee.zip $fx
}}

# compress current file or selected files with zip
#zip ${{
#zip $1.zip $1
#}}

cmd chmod_p ${{
printf "\n\n\e[36m$fx\e[0m\n----\nchmod:"; 
read -rep " " -i "775" "chmod"; 
sudo chmod $chmod $fx; 
lf -remote "send $id unselect *"; 
lf -remote "send $id reload"; 
}}

# 
# cmd tata ${{
# printf " tt\tll";
# read -rep " " -i "aa $id aaaal" "chmod";
# $(lf -remote "send $id echomsg "$id qqqq"");
# }}
# Main options
set icons
set sixel true
# set period 1
#set relativenumber
#set number
#set hiddenfiles "*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set hiddenfiles ".*"
set cleaner "/etc/lf/cleaner"
set previewer "/etc/lf/previewer"
#source '/etc/lf/opener'
set promptfmt "
\033[48;2;35;38;39;38m  %u\033[97m@\033[38;2;235;138;139;38m%h
\033[96m ï‚›  
\033[38;2;255;255;255m\033[48;2;15;25;25m  %w/\033[96m\033[48;2;38;84;86m\033[38;2;255;255;255m%f  \033[0m"
set incsearch true
set incfilter true
set globsearch true
set ratios 4:8 #2:2:6 # 2:3:7:7
set truncatechar "+"
set waitmsg "a"
set timefmt 		"\033[35m02/01/2006\033[46m 15:04:05 \033[0m"
set infotimefmtnew	"02/01 \033[35m15:04"
set infotimefmtold 	"\033[5;222m 2/01/06"
set errorfmt 		"\033[1;31m"
set numberfmt 		"\033[38;5;75;87;116m"
set dircounts
set tabstop 2
set scrolloff 22
set wrapscroll
#set rulerfmt "df:acc:progress:selection:filter:ind"
set rulerfmt "|| \033[0m[\033[2m%s\033[0m] |\033[2;32m%{lf_user_selected_size}\033[0m  \033[2m%i\033[0;1;98m/\033[2m%t \033[0m-\033[2;36m free: \033[0;2m%d\033[0m"
cmd on-select &{{
    s=$(find $fx -type f -maxdepth 1 -ls | awk '{total += $7} END {print total}' | numfmt --to=iec --format='%.2fB')
	lf -remote "send $id set user_selected_size $s"
}}


##
set cursorpreviewfmt "\033[2;7;m"
%test $LF_LEVEL -eq 1 || >&2 printf "Warning: You're in a nested lf instance!"
 
